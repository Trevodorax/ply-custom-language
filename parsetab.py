
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORnonassocINFSUPINFEQSUPEQleftPLUSMINUSleftTIMESDIVIDEnonassocEQUALSnonassocLPARENRPARENnonassocNAMEnonassocNUMBERAND COMMENTBLOCK COMMENTLINE DIVIDE EQUALS INC INF INFEQ LPAREN MINUS NAME NUMBER OR PLUS PRINT RPAREN SEMI STRING SUP SUPEQ TIMESblock : statement SEMI block\n             | statement SEMI\n             | COMMENTLINE\n             | COMMENTBLOCKstatement : NAME EQUALS expressionstatement : PRINT LPAREN expression RPARENstatement : NAME PLUS PLUSstatement : NAME MINUS MINUSstatement : NAME PLUS EQUALS expressionstatement : NAME MINUS EQUALS expressionexpression : expression INF expressionexpression : expression SUP expressionexpression : expression INFEQ expressionexpression : expression SUPEQ expressionexpression : expression PLUS expressionexpression : expression TIMES expressionexpression : expression MINUS expression\n\t\t\t\t| expression DIVIDE expressionexpression : expression AND expressionexpression : expression OR expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : STRINGexpression : NAME'
    
_lr_action_items = {'COMMENTLINE':([0,7,],[3,3,]),'COMMENTBLOCK':([0,7,],[4,4,]),'NAME':([0,7,8,11,15,19,21,23,24,25,26,27,28,29,30,31,32,],[5,5,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'PRINT':([0,7,],[6,6,]),'$end':([1,3,4,7,12,],[0,-3,-4,-2,-1,]),'SEMI':([2,13,14,16,17,18,20,34,35,36,37,38,39,40,41,42,43,44,45,46,47,],[7,-24,-5,-22,-23,-7,-8,-9,-10,-6,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,]),'EQUALS':([5,9,10,],[8,19,21,]),'PLUS':([5,9,13,14,16,17,22,33,34,35,37,38,39,40,41,42,43,44,45,46,47,],[9,18,-24,27,-22,-23,27,27,27,27,27,27,27,27,-15,-16,-17,-18,27,27,-21,]),'MINUS':([5,10,13,14,16,17,22,33,34,35,37,38,39,40,41,42,43,44,45,46,47,],[10,20,-24,29,-22,-23,29,29,29,29,29,29,29,29,-15,-16,-17,-18,29,29,-21,]),'LPAREN':([6,8,11,15,19,21,23,24,25,26,27,28,29,30,31,32,],[11,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'NUMBER':([8,11,15,19,21,23,24,25,26,27,28,29,30,31,32,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'STRING':([8,11,15,19,21,23,24,25,26,27,28,29,30,31,32,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'INF':([13,14,16,17,22,33,34,35,37,38,39,40,41,42,43,44,45,46,47,],[-24,23,-22,-23,23,23,23,23,None,None,None,None,-15,-16,-17,-18,23,23,-21,]),'SUP':([13,14,16,17,22,33,34,35,37,38,39,40,41,42,43,44,45,46,47,],[-24,24,-22,-23,24,24,24,24,None,None,None,None,-15,-16,-17,-18,24,24,-21,]),'INFEQ':([13,14,16,17,22,33,34,35,37,38,39,40,41,42,43,44,45,46,47,],[-24,25,-22,-23,25,25,25,25,None,None,None,None,-15,-16,-17,-18,25,25,-21,]),'SUPEQ':([13,14,16,17,22,33,34,35,37,38,39,40,41,42,43,44,45,46,47,],[-24,26,-22,-23,26,26,26,26,None,None,None,None,-15,-16,-17,-18,26,26,-21,]),'TIMES':([13,14,16,17,22,33,34,35,37,38,39,40,41,42,43,44,45,46,47,],[-24,28,-22,-23,28,28,28,28,28,28,28,28,28,-16,28,-18,28,28,-21,]),'DIVIDE':([13,14,16,17,22,33,34,35,37,38,39,40,41,42,43,44,45,46,47,],[-24,30,-22,-23,30,30,30,30,30,30,30,30,30,-16,30,-18,30,30,-21,]),'AND':([13,14,16,17,22,33,34,35,37,38,39,40,41,42,43,44,45,46,47,],[-24,31,-22,-23,31,31,31,31,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,]),'OR':([13,14,16,17,22,33,34,35,37,38,39,40,41,42,43,44,45,46,47,],[-24,32,-22,-23,32,32,32,32,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,]),'RPAREN':([13,16,17,22,33,37,38,39,40,41,42,43,44,45,46,47,],[-24,-22,-23,36,47,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block':([0,7,],[1,12,]),'statement':([0,7,],[2,2,]),'expression':([8,11,15,19,21,23,24,25,26,27,28,29,30,31,32,],[14,22,33,34,35,37,38,39,40,41,42,43,44,45,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> block","S'",1,None,None,None),
  ('block -> statement SEMI block','block',3,'p_block','calcBase.py',79),
  ('block -> statement SEMI','block',2,'p_block','calcBase.py',80),
  ('block -> COMMENTLINE','block',1,'p_block','calcBase.py',81),
  ('block -> COMMENTBLOCK','block',1,'p_block','calcBase.py',82),
  ('statement -> NAME EQUALS expression','statement',3,'p_assign','calcBase.py',85),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_expr','calcBase.py',89),
  ('statement -> NAME PLUS PLUS','statement',3,'p_statement_add_one','calcBase.py',93),
  ('statement -> NAME MINUS MINUS','statement',3,'p_statement_sub_one','calcBase.py',97),
  ('statement -> NAME PLUS EQUALS expression','statement',4,'p_statement_add','calcBase.py',101),
  ('statement -> NAME MINUS EQUALS expression','statement',4,'p_statement_sub','calcBase.py',105),
  ('expression -> expression INF expression','expression',3,'p_expression_binop_inf','calcBase.py',109),
  ('expression -> expression SUP expression','expression',3,'p_expression_binop_sup','calcBase.py',113),
  ('expression -> expression INFEQ expression','expression',3,'p_expression_binop_infeq','calcBase.py',117),
  ('expression -> expression SUPEQ expression','expression',3,'p_expression_binop_supeq','calcBase.py',121),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop_plus','calcBase.py',125),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop_times','calcBase.py',129),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop_divide_and_minus','calcBase.py',133),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop_divide_and_minus','calcBase.py',134),
  ('expression -> expression AND expression','expression',3,'p_expression_binop_and','calcBase.py',139),
  ('expression -> expression OR expression','expression',3,'p_expression_binop_or','calcBase.py',143),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcBase.py',147),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcBase.py',151),
  ('expression -> STRING','expression',1,'p_expression_string','calcBase.py',155),
  ('expression -> NAME','expression',1,'p_expression_name','calcBase.py',159),
]
